<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fulan.application.mapper.PersonnelMapper">
  <resultMap id="BaseResultMap" type="com.fulan.api.personnel.domain.Personnel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="agent_code" jdbcType="VARCHAR" property="agentCode" />
    <result column="personnel_TYPE" jdbcType="CHAR" property="personnelType" />
    <result column="personnel_STATUS" jdbcType="CHAR" property="personnelStatus" />
    <result column="IDENTITY_TYPE" jdbcType="CHAR" property="identityType" />
    <result column="IDENTITY_CODE" jdbcType="VARCHAR" property="identityCode" />
    <result column="CTFEXPIRE_DATE" jdbcType="DATE" property="ctfexpireDate" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
     <result column="AGE" jdbcType="INTEGER" property="age" />
    <result column="SEX" jdbcType="CHAR" property="sex" />
    <result column="BIRTHDAY" jdbcType="DATE" property="birthday" />
    <result column="Nation" jdbcType="VARCHAR" property="nation" />
    <result column="Political" jdbcType="VARCHAR" property="political" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="channel" jdbcType="VARCHAR" property="channel" />
    <result column="EDUCATION" jdbcType="VARCHAR" property="education" />
    <result column="CELLPHONE" jdbcType="VARCHAR" property="cellphone" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="IS_PHONE_VALIDATE" jdbcType="CHAR" property="isPhoneValidate" />
    <result column="is_insurance_company" jdbcType="INTEGER" property="isInsuranceCompany" />
    <result column="Original_company" jdbcType="VARCHAR" property="originalCompany" />
    <result column="is_quit" jdbcType="INTEGER" property="isQuit" />
    <result column="is_over_six" jdbcType="CHAR" property="isOverSix" />
    <result column="native_work_time" jdbcType="VARCHAR" property="nativeWorkTime" />
    <result column="check_result" jdbcType="CHAR" property="checkResult" />
    <result column="is_check" jdbcType="CHAR" property="isCheck" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="trial_result" jdbcType="VARCHAR" property="trialResult" />
    <result column="departure_date" jdbcType="DATE" property="departureDate" />
     <result column="cheak_option" jdbcType="CHAR" property="cheakOption" />
     <result column="org_id" jdbcType="VARCHAR" property="orgId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, agent_code, personnel_TYPE, personnel_STATUS, IDENTITY_TYPE, IDENTITY_CODE, CTFEXPIRE_DATE, 
    NAME,age, SEX, BIRTHDAY, Nation, Political, source, channel, EDUCATION, CELLPHONE, EMAIL, 
    IS_PHONE_VALIDATE, is_insurance_company, Original_company, is_quit, is_over_six, native_work_time,check_result,
    is_check, create_time, create_user, update_time, update_user,country,trial_result,departure_date,org_id
  </sql>
  <sql id="Base_Column_List_ED">
   ep.id as id,ep.agent_code as agent_code, ep.personnel_TYPE as personnel_TYPE, ep.personnel_STATUS as personnel_STATUS, ep.IDENTITY_TYPE as IDENTITY_TYPE, ep.IDENTITY_CODE as IDENTITY_CODE, ep.CTFEXPIRE_DATE as CTFEXPIRE_DATE, 
    ep.NAME as NAME,ep.age as age, ep.SEX as SEX, ep.BIRTHDAY as BIRTHDAY, ep.Nation as Nation, ep.Political as Political, ep.source as source, ep.channel as channel, ep.CELLPHONE as CELLPHONE, ep.EMAIL as EMAIL, 
    ep.IS_PHONE_VALIDATE as IS_PHONE_VALIDATE, ep.is_insurance_company as is_insurance_company, ep.Original_company as Original_company, ep.is_quit as is_quit, ep.is_over_six as is_over_six, ep.native_work_time as native_work_time,ep.check_result as check_result,
    ep.is_check as is_check, ep.create_time as create_time, ep.create_user as create_user, ep.update_time as update_time,ep.update_user as update_user,ep.country as country,ep.trial_result,ep.departure_date as departure_date, ee.EDUCATION as EDUCATION,ep.cheak_option as cheak_option,ep.org_id as org_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List_ED" />
    from 
    er_personnel ep
	LEFT JOIN er_educational ee on ep.id = ee.personnel_id
	where ep.id = #{id,jdbcType=BIGINT} ORDER BY ee.end_time desc LIMIT 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from er_personnel
    where id = #{id,jdbcType=BIGINT}
  </delete>
<!--   <insert id="insert" parameterType="com.fulan.api.personnel.domain.Personnel">
    insert into er_personnel (id, agent_code, personnel_TYPE, 
      personnel_STATUS, IDENTITY_TYPE, IDENTITY_CODE, 
      CTFEXPIRE_DATE, NAME, SEX, 
      BIRTHDAY, Nation, Political, 
      source, channel, EDUCATION, 
      CELLPHONE, EMAIL, IS_PHONE_VALIDATE, 
      is_insurance_company, Original_company, is_quit, 
      is_over_six, native_work_time, is_check, 
      create_time, create_user, update_time, 
      update_user,country)
    values (#{id,jdbcType=BIGINT}, #{agentCode,jdbcType=VARCHAR}, #{personnelType,jdbcType=CHAR}, 
      #{personnelStatus,jdbcType=CHAR}, #{identityType,jdbcType=CHAR}, #{identityCode,jdbcType=VARCHAR}, 
      #{ctfexpireDate,jdbcType=DATE}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{birthday,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, #{political,jdbcType=VARCHAR}, 
      #{source,jdbcType=VARCHAR}, #{channel,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, 
      #{cellphone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{isPhoneValidate,jdbcType=CHAR}, 
      #{isInsuranceCompany,jdbcType=INTEGER}, #{originalCompany,jdbcType=VARCHAR}, #{isQuit,jdbcType=INTEGER}, 
      #{isOverSix,jdbcType=CHAR}, #{nativeWorkTime,jdbcType=VARCHAR}, #{isCheck,jdbcType=CHAR}, 
      #{createTime,jdbcType=DATE}, #{createUser,jdbcType=BIGINT}, #{updateTime,jdbcType=DATE}, 
      #{updateUser,jdbcType=BIGINT},#{country,jdbcType=VARCHAR})
  </insert> -->
  <insert id="insertSelective" parameterType="com.fulan.api.personnel.domain.Personnel">
    insert into er_personnel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agentCode != null">
        agent_code,
      </if>
      <if test="personnelType != null">
        personnel_TYPE,
      </if>
      <if test="personnelStatus != null">
        personnel_STATUS,
      </if>
      <if test="identityType != null">
        IDENTITY_TYPE,
      </if>
      <if test="identityCode != null">
        IDENTITY_CODE,
      </if>
      <if test="ctfexpireDate != null">
        CTFEXPIRE_DATE,
      </if>
      <if test="name != null">
        NAME,
      </if>
       <if test="age != null">
        AGE,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
      <if test="nation != null">
        Nation,
      </if>
      <if test="political != null">
        Political,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="education != null">
        EDUCATION,
      </if>
      <if test="cellphone != null">
        CELLPHONE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="isPhoneValidate != null">
        IS_PHONE_VALIDATE,
      </if>
      <if test="isInsuranceCompany != null">
        is_insurance_company,
      </if>
      <if test="originalCompany != null">
        Original_company,
      </if>
      <if test="isQuit != null">
        is_quit,
      </if>
      <if test="isOverSix != null">
        is_over_six,
      </if>
      <if test="nativeWorkTime != null">
        native_work_time,
      </if>
      <if test="isCheck != null">
        is_check,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
       <if test="country != null">
        country,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="agentCode != null">
        #{agentCode,jdbcType=VARCHAR},
      </if>
      <if test="personnelType != null">
        #{personnelType,jdbcType=CHAR},
      </if>
      <if test="personnelStatus != null">
        #{personnelStatus,jdbcType=CHAR},
      </if>
      <if test="identityType != null">
        #{identityType,jdbcType=CHAR},
      </if>
      <if test="identityCode != null">
        #{identityCode,jdbcType=VARCHAR},
      </if>
      <if test="ctfexpireDate != null">
        #{ctfexpireDate,jdbcType=DATE},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{AGE,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="political != null">
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isPhoneValidate != null">
        #{isPhoneValidate,jdbcType=CHAR},
      </if>
      <if test="isInsuranceCompany != null">
        #{isInsuranceCompany,jdbcType=INTEGER},
      </if>
      <if test="originalCompany != null">
        #{originalCompany,jdbcType=VARCHAR},
      </if>
      <if test="isQuit != null">
        #{isQuit,jdbcType=INTEGER},
      </if>
      <if test="isOverSix != null">
        #{is_over_six,jdbcType=CHAR},
      </if>
      <if test="nativeWorkTime != null">
        #{nativeWorkTime,jdbcType=VARCHAR},
      </if>
      <if test="isCheck != null">
        #{isCheck,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
       <if test="updateUser != null">
        #{country,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fulan.api.personnel.domain.Personnel">
    update er_personnel
    <set>
      <if test="agentCode != null">
        agent_code = #{agentCode,jdbcType=VARCHAR},
      </if>
      <if test="personnelType != null">
        personnel_TYPE = #{personnelType,jdbcType=CHAR},
      </if>
      <if test="personnelStatus != null">
        personnel_STATUS = #{personnelStatus,jdbcType=CHAR},
      </if>
      <if test="identityType != null">
        IDENTITY_TYPE = #{identityType,jdbcType=CHAR},
      </if>
      <if test="identityCode != null">
        IDENTITY_CODE = #{identityCode,jdbcType=VARCHAR},
      </if>
      <if test="ctfexpireDate != null">
        CTFEXPIRE_DATE = #{ctfexpireDate,jdbcType=DATE},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        BIRTHDAY = #{birthday,jdbcType=DATE},
      </if>
      <if test="nation != null">
        Nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="political != null">
        Political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        EDUCATION = #{education,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        CELLPHONE = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isPhoneValidate != null">
        IS_PHONE_VALIDATE = #{isPhoneValidate,jdbcType=CHAR},
      </if>
      <if test="isInsuranceCompany != null">
        is_insurance_company = #{isInsuranceCompany,jdbcType=INTEGER},
      </if>
      <if test="originalCompany != null">
        Original_company = #{originalCompany,jdbcType=VARCHAR},
      </if>
      <if test="isQuit != null">
        is_quit = #{isQuit,jdbcType=INTEGER},
      </if>
      <if test="isOverSix != null">
        is_over_six = #{isOverSix,jdbcType=CHAR},
      </if>
      <if test="nativeWorkTime != null">
        native_work_time = #{nativeWorkTime,jdbcType=VARCHAR},
      </if>
      <if test="checkResult != null">
        check_result = #{checkResult,jdbcType=CHAR},
      </if>
      <if test="isCheck != null">
        is_check = #{isCheck,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
       <if test="cheakOption != null">
        cheak_option = #{cheakOption,jdbcType=VARCHAR},
      </if>
       <if test="orgId != null">
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPersonnelId" parameterType="com.fulan.api.personnel.domain.Personnel">
    update er_personnel
    set  is_insurance_company = #{isInsuranceCompany,jdbcType=VARCHAR},
    is_over_six = #{isOverSix,jdbcType=VARCHAR},
    native_work_time = #{nativeWorkTime,jdbcType=VARCHAR},
    original_company = #{originalCompany,jdbcType=VARCHAR},
    is_quit = #{isQuit,jdbcType=INTEGER},
    departure_date = #{departureDate,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fulan.api.personnel.domain.Personnel">
    update er_personnel
    set agent_code = #{agentCode,jdbcType=VARCHAR},
      personnel_TYPE = #{personnelType,jdbcType=CHAR},
      personnel_STATUS = #{personnelStatus,jdbcType=CHAR},
      IDENTITY_TYPE = #{identityType,jdbcType=CHAR},
      IDENTITY_CODE = #{identityCode,jdbcType=VARCHAR},
      CTFEXPIRE_DATE = #{ctfexpireDate,jdbcType=DATE},
      NAME = #{name,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=CHAR},
      BIRTHDAY = #{birthday,jdbcType=DATE},
      Nation = #{nation,jdbcType=VARCHAR},
      Political = #{political,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=VARCHAR},
      EDUCATION = #{education,jdbcType=VARCHAR},
      CELLPHONE = #{cellphone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      IS_PHONE_VALIDATE = #{isPhoneValidate,jdbcType=CHAR},
      is_insurance_company = #{isInsuranceCompany,jdbcType=INTEGER},
      Original_company = #{originalCompany,jdbcType=VARCHAR},
      is_quit = #{isQuit,jdbcType=INTEGER},
      is_over_six = #{isOverSix,jdbcType=CHAR},
      native_work_time = #{nativeWorkTime,jdbcType=VARCHAR},
      is_check = #{isCheck,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=DATE},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=DATE},
      update_user = #{updateUser,jdbcType=BIGINT},
      country = #{country,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="PersonnelManageSearchCount" parameterType="com.fulan.api.personnel.vo.SearchPersonnelVo" resultType="int">
  	  select count(*) from (select count(*) 
        from er_personnel epl 
           LEFT JOIN er_educational eel ON eel.end_time = 
		(
		SELECT MAX(end_time)
		FROM er_educational a where a.personnel_id = epl.id) and eel.personnel_id = epl.id
		LEFT JOIN er_apply eay ON eay.personnel_id = epl.id
		where 1=1 
		<if test="orgId != 'B0311'.toString() or orgId == null or orgId==''">
			and epl.org_id = #{orgId}
		</if>
		<if test="keyWord != null and keyWord != ''">
			and (epl.NAME LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%'))
		</if>
		<if test="searchType == 0">
			and epl.personnel_STATUS='0'
		</if>
		<if test="searchType == 1">
			and epl.personnel_STATUS !='0'
		</if>
		<if test="searchType == 2">
			and epl.personnel_STATUS !='0'
			and epl.trial_result ='1'
		</if>
		 group by epl.id
		) aa
  </select>
  <select id="PersonnelManageSearch" resultType="com.fulan.api.personnel.vo.PersonnelManageVo" parameterType="com.fulan.api.personnel.vo.SearchPersonnelVo">
  		SELECT epl.id as id ,epl.NAME as name, epl.SEX as sex, (SELECT TIMESTAMPDIFF(YEAR, epl.BIRTHDAY, CURDATE())) as age,
  			   epl.CELLPHONE as cellphone,epl.IDENTITY_CODE as identityCode, eel.EDUCATION as maxEducation, eel.School as school,
  			   eay.referee_name as RefereeName,null as ReferrerName,epl.check_result as checkResult
		FROM er_personnel epl
		LEFT JOIN er_educational eel ON eel.end_time = 
		(
		SELECT MAX(end_time)
		FROM er_educational a where a.personnel_id = epl.id) and eel.personnel_id = epl.id
		LEFT JOIN er_apply eay ON eay.personnel_id = epl.id
		where 1=1 
		<if test="condition.orgId != 'B0311'.toString() or condition.orgId == null or condition.orgId==''">
			and epl.org_id = #{condition.orgId}
		</if>
		<if test="condition.keyWord != null and condition.keyWord != ''">
			and (epl.NAME LIKE CONCAT(CONCAT('%', #{condition.keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{condition.keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{condition.keyWord}),'%'))
		</if>
		<if test="condition.searchType == 0">
			and epl.personnel_STATUS='0'
		</if>
		<if test="condition.searchType == 1">
			and epl.personnel_STATUS !='0'
		</if>
		<if test="condition.searchType == 2">
			and epl.personnel_STATUS !='0'
			and epl.trial_result ='1'
		</if>
		group by epl.id
  </select>
  
  
  
  
  <select id="personnelManageOtherSearchCount" parameterType="java.lang.String" resultType="int">
  	select count(*) from er_personnel epl where 1=1
  		and epl.personnel_STATUS !='0'
		<if test="keyWord != null and keyWord != ''">
			and epl.NAME LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
		</if>
  </select>
  
  <select id="PersonnelManageOtherSearch" resultType="com.fulan.api.personnel.vo.PersonnelManageVo">
  		SELECT epl.id as id ,epl.NAME as name, epl.SEX as sex, (SELECT TIMESTAMPDIFF(YEAR, epl.BIRTHDAY, CURDATE())) as age,
  			   epl.CELLPHONE as cellphone,epl.IDENTITY_CODE as identityCode, eel.EDUCATION as maxEducation, eel.School as school,
  			   eay.referee_name as RefereeName,null as ReferrerName,epl.check_result as checkResult
		FROM er_personnel epl
		LEFT JOIN er_educational eel ON eel.end_time = 
		(
		SELECT MAX(end_time)
		FROM er_educational a where a.personnel_id = epl.id) and eel.personnel_id = epl.id
		LEFT JOIN er_apply eay ON eay.personnel_id = epl.id
		where 1=1
		<if test="keyWord != null and keyWord != ''">
			and (epl.NAME LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%'))
		</if>
		and epl.personnel_STATUS !='0'
		group by epl.id
  </select>
  
  
  
  
  
   <select id="personnelManageOtherTwoSearchCount" parameterType="java.lang.String" resultType="int">
  	select count(*) from er_personnel epl where 1=1
  		and epl.personnel_STATUS !='0'
  	    and epl.trial_result ='0'
		<if test="keyWord != null and keyWord != ''">
			and epl.NAME LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
		</if>
  </select>
  
  <select id="PersonnelManageOtherTwoSearch" resultType="com.fulan.api.personnel.vo.PersonnelManageVo">
  		SELECT epl.id as id ,epl.NAME as name, epl.SEX as sex, (SELECT TIMESTAMPDIFF(YEAR, epl.BIRTHDAY, CURDATE())) as age,
  			   epl.CELLPHONE as cellphone,epl.IDENTITY_CODE as identityCode, eel.EDUCATION as maxEducation, eel.School as school,
  			   eay.referee_name as RefereeName,null as ReferrerName,epl.check_result as checkResult
		FROM er_personnel epl
		LEFT JOIN er_educational eel ON eel.end_time = 
		(
		SELECT MAX(end_time)
		FROM er_educational a where a.personnel_id = epl.id) and eel.personnel_id = epl.id
		LEFT JOIN er_apply eay ON eay.personnel_id = epl.id
		where 1=1
		<if test="keyWord != null and keyWord != ''">
			and epl.NAME LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
		</if>
		and epl.personnel_STATUS !='0'
		and epl.trial_result ='0'
		group by epl.id
  </select>
  
  
  
  
  
   <!-- 我的增员 -->
    <select id="PersonnelSearchbyagentCode" resultType="com.fulan.api.personnel.vo.PersonnelAddVo">
  		SELECT
				epl.id AS id,
				epl. NAME AS NAME,
				epl.SEX AS sex,
				(
					SELECT
						TIMESTAMPDIFF(
							YEAR,
							epl.BIRTHDAY,
							CURDATE()
						)
				) AS age,
				epl.CELLPHONE AS cellphone,
				eay.talent_plan AS talentPlan,
				epl.personnel_status  AS personnelStatus,
				( select fa.step  from  er_interview_action   ia,
								 er_flow_action  fa
					where  ia.personnel_id =  epl.id
					and  fa.id= ia.flow_action_id
					 ) AS   processProgress
			FROM
				er_personnel epl
			LEFT JOIN er_apply eay ON eay.personnel_id = epl.id 
			WHERE
				1 = 1
		<if test="keyWord != null and  keyWord !=''">
			and epl.NAME  LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
		</if>
		<if test="agentCode != null">
			and epl.agent_code = #{agentCode}
		</if>
		ORDER BY epl.create_time DESC
  </select>
  
  <select id="getPersonnelPool" parameterType="java.lang.Long" resultType="com.fulan.api.personnel.vo.PersonnelPool">
	  	SELECT 
		t1. NAME,
		t1.sex,
		(
			YEAR (now()) - YEAR (t1.birthday) - 1
		) + (
			DATE_FORMAT(t1.birthday, '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d')
		) AS age,
		t1.cellphone,
		t3.talent_plan AS talentPlan,
		t3.referee_name AS refereeName,
		t2.education,
		t2.school,
		t1.channel,
		t1.create_time as createTime
	FROM
		er_personnel t1
	LEFT JOIN er_educational t2 ON t1.id = t2.personnel_id
	LEFT JOIN er_apply t3 ON t1.id = t3.personnel_id
	WHERE
		t1.id = #{personnelId,jdbcType=BIGINT}
	ORDER BY
		t2.end_time DESC LIMIT 0,1;
  </select>
  
  <!-- 我的面试 -->
    <select id="PersonnelpaperSearchbyParam" resultType="com.fulan.api.personnel.vo.PersonnelAddVo">
  		SELECT
			
				epl.id AS id,
				epl. NAME AS NAME,
				epl.SEX AS sex,
				(
					SELECT
						TIMESTAMPDIFF(
							YEAR,
							epl.BIRTHDAY,
							CURDATE()
						)
				) AS age,
				epl.CELLPHONE AS cellphone,
				eay.talent_plan AS talentPlan,
				( select  DISTINCT fa.step  from  er_interview_action   ia,
								 er_flow_action  fa
					where  ia.personnel_id =  epl.id
					and  fa.id= ia.flow_action_id
					 ) AS   processProgress,
				CASE 	WHEN pa.paper_type= '1' THEN '初审' 
		  				WHEN pa.paper_type= '2' THEN '甄选' 
				 		WHEN pa.paper_type= '3' THEN '决定' 
		  				ELSE '' END 			 AS currentLink
			FROM
					er_paper  pa 
			LEFT JOIN er_personnel_paper pp   ON  pp.paper_id = pa.id
			LEFT JOIN er_personnel epl  on  epl.id = pp.personnel_id
			LEFT JOIN er_apply eay ON eay.personnel_id = epl.id
			 
			WHERE
				1 = 1
		<if test="keyWord != null and  keyWord !=''">
			and epl.NAME  LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.IDENTITY_CODE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
			or epl.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
		</if>
		<if test="agentCode != null">
			and epl.agent_code = #{agentCode}
		</if>
		ORDER BY epl.create_time DESC
  </select>
  
   <select id="getPersonnelByIdentityCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from er_personnel
    where identity_code = #{identityCode,jdbcType=BIGINT}
  </select>
   <select id="selectByPersonnelId" parameterType="java.lang.Long" resultMap="BaseResultMap">
	   select 
	    <include refid="Base_Column_List" />
	    from er_personnel
	    where id = #{personnelId,jdbcType=BIGINT}
   </select>
   <select id="selectEduByPersonnelId" parameterType="java.lang.Long" resultType="com.fulan.api.personnel.vo.PersonnelEducation">
	   select   
	    t1.name,
        t1.sex,
        t1.birthday,
		t1.nation,
        t2.education,
        t2.school,
		t2.start_time as startTime,
		t2.end_time as endTime,
        t1.country
	    from er_personnel t1 left join er_educational t2 on t1.id = t2.personnel_id
	    where t1.id = #{personnelId,jdbcType=BIGINT}
 		order by t2.end_time desc limit 0,1
   </select>
   <select id="getAgentPersonnel" parameterType="java.lang.Long" resultType="com.fulan.api.personnel.vo.AgentOrMustIncreasePersonnelPool">
    select 
		t1.name,
		t1.sex,
		(year (now()) - year (t1.birthday) - 1
			) + (
				date_format(t1.birthday, '%m%d')  &lt;= date_format(now(), '%m%d')
			) as age, 
		t1.cellphone,
		t3.talent_plan as talentPlan,
		t2.education,
		t2.school,
		t1.create_time as createTime
	from er_personnel t1
    left join er_educational t2 on t1.id = t2.personnel_id
    left join er_apply t3 on t1.id = t3.personnel_id
    where t1.create_user = #{accountId,jdbcType=BIGINT}
    and t1.agent_code is not null
  </select>
  
  	<resultMap id="personnelVoMap" type="com.fulan.api.system.Vo.PersonnelTagVo" >
  		<collection property="personnel" ofType="com.fulan.api.system.Vo.AgentOrMustIncreasePersonnelPool">
			  <result column="id" jdbcType="BIGINT" property="id" />
			  <result column="name" jdbcType="VARCHAR" property="name" />
			  <result column="sex" jdbcType="VARCHAR" property="sex" />
			  <result column="age" jdbcType="VARCHAR" property="age" />
			  <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
			  <result column="talentPlan" jdbcType="VARCHAR" property="talentPlan" />
			  <result column="education" jdbcType="VARCHAR" property="education" />
			  <result column="school" jdbcType="VARCHAR" property="school" />
			  <result column="createTime" jdbcType="DATE" property="createTime" />
			  <result column="identityType" jdbcType="DATE" property="identityType" />
			  <result column="identityCode" jdbcType="DATE" property="identityCode" />
		 </collection>
		<collection property="tagList" ofType="com.fulan.api.system.domain" select="com.fulan.application.mapper.PersonnelMapper.selectTagByPersonnelId" column="id"></collection>
	</resultMap>
	
  
   <select id="selectTagByPersonnelId"  resultType="com.fulan.api.system.domain.Tag">
	   SELECT
		tag_id AS id
		FROM er_tag where personnel_id = #{id}
   </select>
  <select id="getMustIncrease"  resultMap="personnelVoMap">
   select 
   		t1.id,
		t1.name,
		t1.sex,
		t1.age, 
		t1.cellphone,
		t3.talent_plan as talentPlan,
		t2.education,
		t2.school,
		t1.create_time as createTime
	from er_personnel t1
    left join er_educational t2 on t1.id = t2.personnel_id
   left join er_apply t3 on t1.id = t3.personnel_id
   where t1.personnel_status = '0'
   and t1.create_user = #{accountId,jdbcType=BIGINT}
  	<if test="keyWord != null and  keyWord !=''">
		and (t1.NAME  LIKE CONCAT(CONCAT('%', #{keyWord}),'%')
		or t1.CELLPHONE LIKE CONCAT(CONCAT('%', #{keyWord}),'%') )
	</if>
	order by t1.create_time desc
  </select>
  
  <select id="getMustIncreaseedit"  resultMap="personnelVoMap">
   select 
   		t1.id,
		t1.name,
		t1.sex,
		t1.identity_type AS  identityType,
		t1.identity_code AS  identityCode,
		t1.age,
		t1.cellphone,
		t3.talent_plan as talentPlan,
		t2.education,
		t2.school,
		t1.create_time as createTime
	from er_personnel t1
    left join er_educational t2 on t1.id = t2.personnel_id
   left join er_apply t3 on t1.id = t3.personnel_id
   where t1.personnel_status = '0'
   and t1.create_user = #{accountId,jdbcType=BIGINT}
	<if test="personnelId != null and  personnelId !=''">
		and t1.id = #{personnelId}
	</if>
  </select>
  
  
  
  <select id="getIncreaseing" parameterType="java.lang.Long" resultType="com.fulan.api.personnel.vo.IncreaseingPersonnelPool">
     select 
		t1.name,
		t1.sex,
		(year (now()) - year (t1.birthday) - 1
			) + (
				date_format(t1.birthday, '%m%d')  &lt;= date_format(now(), '%m%d')
			) as age, 
		t1.cellphone,
		t3.talent_plan as talentPlan,
		t2.education,
		t2.school,
		t1.create_time as createTime,
    (case t6.id when '1' then 'N/A' 
                when '2' then '信息录入'
			    when '3' then '初审面试'
                when '4' then '甄选面试'
                when '5' then '核查'
     else '' end ) as lastLink,
	  t6.flow_desc as currentLink
	from er_personnel t1
    left join er_educational t2 on t1.id = t2.personnel_id
    left join er_apply t3 on t1.id = t3.personnel_id
    left join er_interview_action t4 on t1.id = t4.personnel_id
    left join er_flow_action t5 on t4.flow_action_id = t5.id
    left join er_flow t6 on t5.flow_id = t6.id
    where t1.personnel_status &lt;&gt; '1' and t1.personnel_status &lt;&gt; '7' 
    and t1.create_user = #{accountId,jdbcType=BIGINT}
	order by t4.create_time desc 
    limit 0 ,1
  </select>
  
  <resultMap id="PersonnelManageInfoVoMap" type="com.fulan.api.personnel.vo.PersonnelManageInfoVo">
  	<collection ofType="com.fulan.api.personnel.domain.Personnel" property="personnel" select="com.fulan.application.mapper.PersonnelMapper.selectByPrimaryKey" column="id"/>
	<collection ofType="com.fulan.api.personnel.domain.Apply" property="apply" select="com.fulan.application.mapper.ApplyMapper.selectByPersonnelId" column="id"/>
	<collection ofType="com.fulan.api.personnel.domain.Educational" property="educational" select="com.fulan.application.mapper.EducationalMapper.selectByPersonnelId" column="id"/>
	<collection ofType="com.fulan.api.personnel.domain.FamilyMember" property="familyMember" select="com.fulan.application.mapper.FamilyMemberMapper.selectByPersonnelId" column="id"/>
	<collection ofType="com.fulan.api.personnel.domain.Tag" property="tag" select="com.fulan.application.mapper.TagMapper.selectByPersonnelId" column="id"/>
  	<collection ofType="com.fulan.api.personnel.domain.WorkExperience" property="workExperience" select="com.fulan.application.mapper.WorkExperienceMapper.selectByPersonnelId" column="id"/>
  </resultMap>
  <select id="checkPersonnelManageInfoById" resultMap="PersonnelManageInfoVoMap">
  	SELECT id FROM er_personnel 
	WHERE id = #{personnelId,jdbcType=BIGINT}
  </select>
  
  
   <select id="selectteamscalecountbyaccountId" resultType="java.lang.Integer" >    
				   select count(1)  from  er_personnel   pel where pel.create_user in(
				       <foreach collection="accountIds" separator="," item="accountId" index="index">
     					 #{accountId}
    				   </foreach> )
    				   AND pel.agent_code IS NOT NULL
					  
</select>
  
  
  
  
  <select id="selectteamYeaycountbyaccountId" resultType="java.lang.Integer" >    
				   select count(1)  from  er_personnel   pel where pel.create_user in(
				       <foreach collection="accountIds" separator="," item="accountId" index="index">
     					 #{accountId}
    				   </foreach> )
    				   AND pel.agent_code IS NOT NULL
					   AND year(pel.create_time) = year(NOW())
</select>
		 
		 <select id="selectteamMouthcountbyaccountId" resultType="java.lang.Integer" >    
				   select count(1)  from  er_personnel   pel where pel.create_user in(
				       <foreach collection="accountIds" separator="," item="accountId" index="index">
     					 #{accountId}
    				   </foreach> )
    				   AND pel.agent_code IS NOT NULL
					   AND month(pel.create_time) =#{searchMonth}
					   and year(pel.create_time) = year(NOW())
		 </select>
  
  
  
  		<select id="rankingbyaccountId" resultType="java.lang.String" >    
				    select c.rowno from 
				(SELECT  @rowno:=@rowno + 1 AS rowno,a.*  FROM
				(SELECT
					cus.cruntNum,
					group_concat(cus.create_user) AS mergeId
				FROM
					(
						SELECT
							t.cruntNum,
							t.create_user
						FROM
							(
								SELECT
									count(1) AS cruntNum,
									p.create_user
								FROM
									er_personnel p
								WHERE
									p.create_user IN (
								       <foreach collection="accountIds" separator="," item="searchId" index="index">
				     					 #{searchId}
				    				   </foreach> )
								GROUP BY
									p.create_user
							) t
						ORDER BY
							t.cruntNum desc
					) cus,
					(SELECT(@rowNum := 0)) b
				GROUP BY
					cus.cruntNum)a,(SELECT @rowno:=0) b) c  where  find_in_set(#{accountId}, c.mergeId)
		 </select>
  
   <update id="updatePersonnelStatusByPersonnelId" parameterType="com.fulan.api.personnel.domain.Personnel">
    update er_personnel
 	set 
 	<if test="trialResult != null and trialResult != ''">
 			trial_result = #{trialResult},
 	</if>
 	personnel_status = #{personnelStatus}
 	
 	where id = #{id} and  personnel_status != '0' and personnel_status is not null
  </update>
  
</mapper>