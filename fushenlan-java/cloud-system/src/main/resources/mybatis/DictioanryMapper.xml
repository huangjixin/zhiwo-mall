<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fulan.application.mapper.DictionaryMapper" >


<resultMap id="BaseResultMap" type="com.fulan.api.system.domain.Dictionary">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="cn_name" property="cnName" jdbcType="VARCHAR" />
    <result column="en_name" property="enName" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="BIGINT" />
    <result column="root_id" property="rootId" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="layer" property="layer" jdbcType="BIGINT" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="SMALLINT" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
    <result column="system_flag" property="systemFlag" jdbcType="VARCHAR" />
    <result column="create_by_id" property="createById" jdbcType="VARCHAR" />
    <result column="create_by_name" property="createByName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_by_id" property="updateById" jdbcType="INTEGER" />
    <result column="update_by_name" property="updateByName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
   
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, code, cn_name, en_name, value,root_id, parent_id, layer, sort, description, enabled, 
    system_flag, create_by_id, create_by_name, create_time, update_by_id,update_by_name,update_time
  </sql>


<select id="selectAllList" resultMap="BaseResultMap" >
      select <include refid="Base_Column_List" /> from dictionary where 1=1
        <if test="code != null and code != '' ">
			 and code=#{code}
		</if>
		<if test="cnName != null and cnName != '' ">
			 and cn_name=#{cnName}
		</if>
		<if test="enName != null and enName != '' ">
			 and en_name=#{enName}
		</if>
      and id !=#{id}
      and enabled ='1'
</select>

<update id="updateDicParentId" parameterType="com.fulan.api.system.domain.Dictionary">
update dictionary set enabled=#{enabled} where id=#{id}

</update>

<update id="updateDictionary" parameterType="com.fulan.api.system.domain.Dictionary">

   update dictionary
        <set>
	         <if test="code != null">code = #{code},</if> 
	         <if test="cnName != null and cnName != ''">cn_name = #{cnName},</if> 
	         <if test="enName != null and enName != ''">en_name = #{enName},</if> 
	         <if test="value != null">value = #{value},</if> 
             <if test="rootId != null">root_id = #{rootId},</if>
             <if test="parentId != null">parent_id = #{parentId},</if> 
             <if test="layer != null">layer = #{layer},</if> 
             <if test="sort != null">sort = #{sort},</if> 
             <if test="description != null">description = #{description},</if> 
             <if test="enabled != null">enabled = #{enabled},</if> 
             <if test="systemFlag != null">system_flag = #{systemFlag},</if>     
             <if test="createById != null">create_by_id = #{createById},</if>  
             <if test="createByName != null">create_by_name = #{createByName},</if>
             <if test="createTime != null">create_time = #{createTime},</if>
             <if test="updateById != null">update_by_id = #{updateById},</if>
             <if test="updateByName != null">update_by_name = #{updateByName},</if>
             <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
           <where>
               <if test="id != null">
                   id = #{id}
               </if>
             
           </where>


</update>

<insert id="insertDictionary" parameterType="com.fulan.api.system.domain.Dictionary">
insert into dictionary
(id,code,cn_name,en_name,value,root_id,parent_id,layer,sort,description,enabled,system_flag,create_by_id,create_by_name,create_time,update_by_id,update_by_name,update_time)
values(#{id},#{code},#{cnName},#{enName},#{value},#{rootId},#{parentId},#{layer},#{sort},#{description},#{enabled},#{systemFlag},#{createById},#{createByName},#{createTime},#{updateById},#{updateByName},#{updateTime})
</insert>



<select id="infoDictionary"   resultMap="BaseResultMap" >
     SELECT 
     <include refid="Base_Column_List" />
      FROM dictionary where parent_id =(SELECT id FROM dictionary limit 1) and enabled =1
</select>

<select id="selcetListDictionary"   resultMap="BaseResultMap" >
     SELECT 
     <include refid="Base_Column_List" />
      from dictionary where code=#{code}
</select>

<select id="selcetChildListDictionary"   resultMap="BaseResultMap" >
     SELECT 
     <include refid="Base_Column_List" />
      from dictionary where  parent_id= (select id from dictionary where code =#{code})
      
</select>

<select id="selectDictionaryById"   resultMap="BaseResultMap" >
     SELECT 
     <include refid="Base_Column_List" />
       from dictionary where id=#{id}
      
</select>





<select id="selectAllChild" parameterType="java.lang.Long" resultMap="BaseResultMap">
select 
<include refid="Base_Column_List" />
 from dictionary where parent_id=#{id} and enabled =1

</select>

<select id="findDictionaryByCode" parameterType="java.lang.String" resultMap="BaseResultMap" >
     SELECT 
     <include refid="Base_Column_List" />
       from dictionary where parent_id = (select id from dictionary where code = #{code} ) 
       and enabled =1 order by en_name desc
</select>

    <select id="findByPCodeAndValue" parameterType="java.lang.String" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List" />
        from dictionary where parent_id = (select id from dictionary where code = #{code} )
        and enabled =1 and value = #{value} order by en_name desc
    </select>
</mapper>