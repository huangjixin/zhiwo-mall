package com.fulan.api.security.service;import java.util.List;import java.util.Set;import org.springframework.cloud.netflix.feign.FeignClient;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestParam;import com.fulan.api.security.domain.Resource;import com.fulan.api.security.vo.ResourceListVO;import com.fulan.application.util.domain.Response;import com.fulan.application.util.page.PageInfo;import io.swagger.annotations.ApiParam;@FeignClient(name = "security")public interface ResourceService {	/**	 * 根据id查找	 * @param id	 * @return	 */	@PostMapping("/resourceService/findById")	Resource findById(Long id);		/**	 * 新增	 * @param resource	 * @return	 */	@PostMapping("/resource/add")	Response<String> save(Resource resource);	/**	 * 更新	 * @param resource	 * @return	 */	@PostMapping("/resource/update")	int update(Resource resource);	/**	 * 根据id查找	 * @param id	 * @return	 */	@PostMapping("/resource/delete")	int deleteById(Long id);		@PostMapping("/resource/list")	PageInfo<Resource> list(@RequestParam(name="resource") Resource resource,@RequestParam(name="pageInfo") PageInfo pageInfo);	/**	 * 分页查询资源	 * @param pageNo	 * @param pageSize	 * @return	 */	/*@PostMapping("/resourceService/listByPage")	PageInfo<Resource> listByPage(Integer pageNo,Integer pageSize);*/			@PostMapping("/manage/resourceService/save")	Response<String> saveForManage(@RequestBody Resource resource);		@PostMapping("/manage/resourceService/dele")	Response<String> deleteForManage(@RequestParam("id") Long id);		@PostMapping("/manage/resourceService/deleByIds")	Response<String> deleteIdsForManage(@RequestParam("ids") String ids);		@PostMapping("/manage/resourceService/deleByParentId")	Response<String> deleteByParentIdForManage(@RequestParam("parentId") Long parentId);		@PostMapping("/manage/resourceService/update")	Response<String> updateForManage(@RequestBody Resource resource,@RequestParam(value = "type",defaultValue ="0") String type);		@PostMapping("/manage/resourceService/sele")	Response<Resource> seleForManage(@RequestParam("id") Long id);		/*	 * @RequestBody Resource resource,			@RequestParam(name = "pageSortFiled", defaultValue = "seq") String pageSortFiled,            @RequestParam(name = "pageSortType", defaultValue = "asc") String pageSortType	 */	@PostMapping("/manage/resourceService/seleAll")	Response<List<Resource>> seleAllForManage(@RequestBody Resource resource);		@PostMapping("/manage/resourceService/seleByParentId")	Response<List<Resource>> seleByParentIdForManage(@RequestBody Resource resource);		@GetMapping("/manage/resourceService/listByParentIdForManage")	List<ResourceListVO> listByParentIdForManage(@RequestParam("id") String id,@RequestParam(value="accountId",required=false) Long accountId);		@PostMapping("/manage/resourceService/listPIdOrIdFM")	Response<List<Resource>> listPIdOrIdFM(@RequestParam("id") String id);}