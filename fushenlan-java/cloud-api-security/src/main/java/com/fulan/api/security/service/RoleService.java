package com.fulan.api.security.service;import java.util.List;import org.springframework.cloud.netflix.feign.FeignClient;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestParam;import com.fulan.api.security.domain.Resource;import com.fulan.api.security.domain.Role;import com.fulan.api.security.vo.RoleAndResourceVo;import com.fulan.application.util.domain.Response;import com.fulan.application.util.page.PageInfo;@FeignClient(name = "security")public interface RoleService {	/**	 * 根据id查找	 * @param id	 * @return	 */	@PostMapping("/roleService/findById")	Role findById(@RequestParam("id")Long id);	/**	 * 新增	 * @param role	 * @return	 */	@PostMapping("/role/add")	Response<String> save(@RequestBody Role role);	/**	 * 更新	 * @param role	 * @return	 */	@PostMapping("/role/update")	int updateRole(@RequestBody Role role);	/**	 * 根据id删除	 * @param id	 * @return	 */	@PostMapping("/role/delete")	int deleteById(@RequestParam("id") Long id);	/**	 * 分页查询	 * @param pageNo	 * @param pageSize	 * @return	 */	@PostMapping("/role/list")	PageInfo<Role> list(@RequestBody Role role,@RequestParam("page") PageInfo<Role> page);		/**	 * 新增资源	 * @param resourceId	 * @param roleId	 * @return	 */	@PostMapping("/role/addResource")	Response<String> addResource(@RequestParam("resourceId") Long resourceId,@RequestParam("roleId") Long roleId);		/**	 * 删除角色资源	 * @param resourceId	 * @param roleId	 */	@PostMapping("/role/deleteResource")	void deleteResource(@RequestParam("resourceId") Long resourceId,@RequestParam("roleId") Long roleId);		/**	 * 查询资源列表	 * @param roleId	 * @param resourceType	 * @return	 */	@PostMapping("/role/findResources")	List<Resource> findResources(@RequestParam("roleId") Long roleId,@RequestParam("resourceType") String resourceType);		/**	 * 根据id查找	 * @param id	 * @return	 */	@PostMapping("/mamage/roleService/findById")	Response<Role> findByIdForManage(@RequestParam("id")Long id);	/**	 * 新增	 * @param role	 * @return	 */	@PostMapping("/mamage/roleService/add")	Response<String> saveForManage(@RequestBody Role role,@RequestParam("type") String type);	/**	 * 更新	 * @param role	 * @return	 */	@PostMapping("/mamage/roleService/update")	Response<String> updateRoleForManage(@RequestBody Role role);	/**	 * 根据id删除	 * @param id	 * @return	 */	@PostMapping("/mamage/roleService/delete")	Response<String> deleteByIdForManage(@RequestParam("id") Long id);		/**	 * 分页查询	 * @param pageNo	 * @param pageSize	 * @return	 */	@PostMapping("/mamage/roleService/list")	Response<List<Role>> listForManage();			/**	 * 查询所有角色并其关联的所有资源权限	 * @return	 */	@PostMapping("/mamage/roleService/findRAR")	List<RoleAndResourceVo> findRoleAndResource(@RequestParam(name ="id",defaultValue="") String id);		/**	 * 根据角色id查找资源	 * @param roleId	 * @return	 */	@PostMapping("/mamage/roleService/findResourceByRoleId")	List<Resource> findResourceByRoleId(@RequestParam("roleId")Long roleId);}