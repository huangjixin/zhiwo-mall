package com.fulan.application.controller;import javax.servlet.http.HttpServletRequest;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import com.baomidou.mybatisplus.plugins.Page;import com.fulan.api.security.domain.AccountRole;import com.fulan.application.service.AccountRoleService;import com.fulan.application.util.domain.Response;import com.fulan.core.monitoring.log.annotation.NoLog;import io.swagger.annotations.Api;import io.swagger.annotations.ApiOperation;@NoLog@Api(tags = "AccountRoleApi", description = "账号角色接口")@RestController@RequestMapping(value = "/accountRole")public class AccountRoleController {	@Autowired	AccountRoleService accountRoleService;	private static final Logger logger = LoggerFactory.getLogger(AccountRoleController.class);	@ApiOperation(value = "新增账号角色", notes = "新增账号角色", response = Response.class)	@RequestMapping(value = "/add", produces = { "application/json;charset=utf-8" }, method = RequestMethod.POST)	public Response<String> addRole(HttpServletRequest request, @RequestBody AccountRole accountRole) {		accountRoleService.save(accountRole);		return accountRoleService.save(accountRole);	}	@ApiOperation(value = "删除账号角色", notes = "删除账号角色", response = Response.class)	@RequestMapping(value = "/delete", produces = { "application/json;charset=utf-8" }, method = RequestMethod.POST)	public Response<String> delAccountRole(HttpServletRequest request, @RequestParam(required=true) Long id) {		accountRoleService.deleteById(id);		return new Response<String>(Response.SUCCESS, "删除账号角色成功");	}		@ApiOperation(value = "分页查询账号角色列表", notes = "分页查询账号角色列表", response = Response.class)	@RequestMapping(value = "/listByPage", produces = { "application/json;charset=utf-8" }, method = RequestMethod.POST)	public Page<AccountRole> listByPage(HttpServletRequest request, @RequestBody AccountRole accountRole,@RequestParam(required=true) Integer pageNo,			@RequestParam(required=true) Integer pageSize) {		return accountRoleService.listByPage(pageNo, pageSize, accountRole);	}}