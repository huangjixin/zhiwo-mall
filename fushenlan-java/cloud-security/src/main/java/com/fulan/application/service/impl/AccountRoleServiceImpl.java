package com.fulan.application.service.impl;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Set;import org.apache.commons.collections.CollectionUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.baomidou.mybatisplus.mapper.EntityWrapper;import com.baomidou.mybatisplus.plugins.Page;import com.baomidou.mybatisplus.service.impl.ServiceImpl;import com.fulan.api.security.domain.AccountRole;import com.fulan.application.mapper.AccountRoleMapper;import com.fulan.application.service.AccountRoleService;import com.fulan.application.util.domain.Response;@Servicepublic class AccountRoleServiceImpl extends ServiceImpl<AccountRoleMapper, AccountRole> implements AccountRoleService{	@Autowired	AccountRoleMapper accountRoleMapper;	@Override	public List<AccountRole> findByAccountId(Long accountId) {		Map<String,Object> columnMap=new HashMap<>();		columnMap.put("account_id", accountId);		return accountRoleMapper.selectByMap(columnMap);	}	@Override	public int deleteAccountId(Long accountId) {		return accountRoleMapper.deleteAccountId(accountId);	}	@Override	public int  inserBylist(List<AccountRole> accountRole) {				return accountRoleMapper.inserBylist(accountRole);	}	@Override	public AccountRole findById(Long id) {		return accountRoleMapper.selectById(id);	}	@Override	public Response<String> save(AccountRole accountRole) {		//检查账号是否存在		Map<String,Object> columnMap=new HashMap<>();		columnMap.put("role_id", accountRole.getRoleId());		columnMap.put("account_id", accountRole.getAccountId());		List<AccountRole> ars=accountRoleMapper.selectByMap(columnMap);		Response<String> resp=new Response<String>(Response.SUCCESS, "添加账号角色成功");		if(CollectionUtils.isNotEmpty(ars)){			resp.setCode(Response.ERROR);			resp.setMsg("账号角色已存在");			return resp;		}		// TODO 设置id		accountRoleMapper.insert(accountRole);		return resp;	}	@Override	public int deleteById(Long id) {		return accountRoleMapper.deleteById(id);	}	@Override	public Page<AccountRole> listByPage(Integer pageNo, Integer pageSize, AccountRole accountRole) {		EntityWrapper<AccountRole> wrapper=new EntityWrapper<>(accountRole);		Page<AccountRole> page=new Page<>(pageNo,pageSize);		return this.selectPage(page, wrapper);	}	@Override	public List<String> selectAccountRoleManageVo(Long accountId) {				return accountRoleMapper.selectAccountRoleManageVo(accountId);	}	@Override	public List<String> selectByAccountId(Long accountId) {		// TODO Auto-generated method stub		return accountRoleMapper.selectByAccountId(accountId);	}		}