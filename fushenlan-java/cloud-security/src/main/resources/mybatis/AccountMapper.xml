<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.fulan.application.mapper.AccountMapper" >    <resultMap id="BaseResultMap" type="com.fulan.api.security.domain.Account" >        <id column="id" property="id" jdbcType="BIGINT" />        <result column="account_name" property="accountName" jdbcType="VARCHAR" />        <result column="password" property="password" jdbcType="VARCHAR" />        <result column="enabled" property="enabled" javaType="java.lang.Boolean"/>        <result column="email" property="email" javaType="java.lang.String"/>        <result column="mobile" property="mobile" javaType="java.lang.String"/>        <result column="is_delete" property="delete" javaType="java.lang.Boolean"/>        <result column="first_login" property="firstLogin" javaType="java.lang.String"/>        <result column="account_type" property="accountType" javaType="java.lang.String"/>        <result column="locked" property="locked" javaType="java.lang.Boolean"/>        <result column="create_by_id" property="createById" jdbcType="BIGINT" />        <result column="create_by_name" property="createByName" jdbcType="VARCHAR" />        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />        <result column="update_by_id" property="updateById" jdbcType="BIGINT" />        <result column="update_by_name" property="updateByName" jdbcType="VARCHAR" />        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />        <result column="company_id" property="companyId" jdbcType="VARCHAR" />         <result column="org_id" property="orgId" jdbcType="VARCHAR" />        <result column="post_type" property="postType" jdbcType="VARCHAR" />         <result column="superior" property="superior" jdbcType="BIGINT" />         <result column="belong_superior" property="belongSuperior" jdbcType="BIGINT" />         <result column="belong_director" property="belongDirector" jdbcType="BIGINT" />             </resultMap>    <sql id="Base_Column_List" >        id, account_name,password,email,mobile,enabled,locked,is_delete,create_by_id,create_by_name,create_time,update_by_id,update_by_name,update_time,company_id,account_type,post_type,org_id,belong_superior,belong_director,superior_name    </sql>     <sql id="Base_Column_List_Role" >        a.id, a.account_name,a.password,a.email,a.mobile,a.enabled,a.locked,a.is_delete,a.create_by_id,a.create_by_name,a.create_time,a.update_by_id,a.update_by_name,a.update_time,a.company_id    </sql>	        <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap" >        SELECT        <include refid="Base_Column_List" />       FROM account  WHERE account_id = #{id}    </select>	<select id="findFuzzyByName" parameterType="java.lang.String" resultType="com.fulan.api.security.vo.AccountFuzzyQueryVO" >       select id,account_name as name from account where account_name like concat('%',#{name},'%')           </select>    <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap" >        SELECT        <include refid="Base_Column_List" />       FROM account  WHERE account_name = #{name}    </select>        <select id="selectByAccount" parameterType="com.fulan.api.security.vo.AccountVO" resultMap="BaseResultMap" >        SELECT       <include refid="Base_Column_List" />       FROM account       WHERE        <if test="accountName != null" >            (account_name = #{accountName} or  email = #{accountName} or mobile = #{accountName})        </if>        <if test="companyId != null" >           and company_id = #{companyId}        </if>    </select>     <select id="findByRoleId" parameterType="java.lang.Long" resultMap="BaseResultMap" >     	SELECT        		<include refid="Base_Column_List_Role" />       		FROM account a left join account_role ar on a.id = ar.account_id        			WHERE ar.role_id = #{roleId}    </select>         <select id="findByOtherRoleId"  resultMap="BaseResultMap" >     	SELECT        		<include refid="Base_Column_List_Role" />       		 FROM account a left join account_role ar on a.id = ar.account_id        			WHERE 1=1        			<if test="accountName != null and accountName != '' ">			       and a.account_name LIKE CONCAT('%',#{accountName},'%')		        </if>		        <if test="mobile != null and mobile != '' ">			       and a.mobile LIKE CONCAT('%',#{mobile},'%')		       </if>		       and ar.role_id = #{roleId}    </select>         <select id="findByRoleIdAndName" resultMap="BaseResultMap" >     	SELECT        		<include refid="Base_Column_List_Role" />       		FROM account_role ar left join account a on a.id = ar.account_id   			<where>  				<if test="roleId != null and roleId != '' ">  					and ar.role_id = #{roleId}  				</if>  				<if test="roleId != null and roleId != '' ">  					and ar.account_name = #{name}  				</if>  			</where>     </select>         <select id="findByAccountId" resultMap="BaseResultMap" >	     	 SELECT 	       	<include refid="Base_Column_List" />	       FROM account  WHERE id in (	       				<foreach collection="accountId" index="index" item="item" open="" separator="," close="">     					 #{item}    				   </foreach> )    </select>			<select id="selectteamYeaycountbyaccountId" resultType="java.lang.String" >    				   SELECT						SUM(t.target_value)					FROM						target t					WHERE						t.account_id IN (				       <foreach collection="accountIds" separator="," item="accountId" index="index">     					 #{accountId}    				   </foreach> )    				and  t.target_year = year(NOW())		 </select>		 		 <select id="selectteamMouthcountbyaccountId" resultType="java.lang.String" >    				   SELECT						SUM(t.target_value)					FROM						target t					WHERE						t.account_id IN (				       <foreach collection="accountIds" separator="," item="accountId" index="index">     					 #{accountId}    				   </foreach> )    				  and  t.target_time = #{searchMonth}     				  and  t.target_year = year(NOW())		 </select>		 		 <select id="checkLogin" resultMap="BaseResultMap">		    select <include refid="Base_Column_List" /> from account  		        where 1=1 		          and  account_name =#{uName}		          and password=#{pCode}		 </select>		 		    <select id="selectByAll" parameterType="java.lang.String" resultMap="BaseResultMap">	    SELECT <include refid="Base_Column_List" />		FROM account		WHERE 1=1 		and  is_delete=0		<if test="accountName != null and accountName != '' ">			and account_name LIKE CONCAT('%',#{accountName},'%')		</if>		<if test="telephone != null and telephone != '' ">			and mobile LIKE CONCAT('%',#{telephone},'%')		</if>		ORDER BY create_time desc   </select>       <select id="selectByAllOther" parameterType="java.lang.String" resultMap="BaseResultMap">	    SELECT <include refid="Base_Column_List" />		FROM account		WHERE 1=1		<if test="accountName != null and accountName != '' ">			and account_name LIKE CONCAT('%',#{accountName},'%')		</if>		<if test="mobile != null and mobile != '' ">			and mobile LIKE CONCAT('%',#{mobile},'%')		</if>   </select>     <select id="selectByAllCount" parameterType="java.lang.String" resultType="int">	    SELECT count(*)		FROM account		WHERE 1=1		and  is_delete=0		<if test="accountName != null and accountName != '' ">			and account_name LIKE CONCAT('%',#{accountName},'%')		</if>		<if test="mobile != null and mobile != '' ">			and mobile LIKE CONCAT('%',#{mobile},'%')		</if>   </select>           <select id="selectByCompanyId" parameterType="java.lang.String" resultMap="BaseResultMap">	    SELECT <include refid="Base_Column_List" />		FROM account		WHERE 1=1		<if test="companyId != null and companyId != '' ">			and company_id =#{companyId}		</if>   </select>   <select id="accountOffVoList" resultType="com.fulan.api.security.vo.AccountOffVo">   		select acc.id as id,acc.account_name as accountName,acc.post_type as postType,abi.branch_name as branchName,abi.branch_province as branchProvince    		from account acc 		left join account_agent aa on acc.id = aa.account_id		left join agent_branch_infomation abi on aa.id = abi.agent_id 		<where>		 	<if test="idList != null">		        acc.id in 		    	<foreach collection="idList" index="index" item="item" open="(" separator="," close=")">            		#{item}       			</foreach>		    </if>			<if test="name != null and name != '' ">			and account_name LIKE CONCAT('%',#{name},'%')			</if>		</where>		group by acc.id   </select>      <select id="accountOffVoCount" resultType="java.lang.Integer">   		SELECT COUNT(id) FROM ( select acc.id   		from account acc 		left join account_agent aa on acc.id = aa.account_id		left join agent_branch_infomation abi on aa.id = abi.agent_id 		<where>		    <if test="idList != null">		     acc.id in 		    	<foreach collection="idList" index="index" item="item" open="(" separator="," close=")">            		#{item}       			</foreach>		    </if>			<if test="name != null and name != '' ">			and account_name LIKE CONCAT('%',#{name},'%')			</if>		</where>		group by acc.id) t_account   </select>      <select id="findByRoleType" resultMap="BaseResultMap">   		select <include refid="Base_Column_List_Role" /> from account a   		left join account_role ar on a.id = ar.account_id		left join role r on r.id = ar.role_id		left join role r2 on r2.id = r.parent_id		<where>			<if test="type != null and type != '' ">				and	r.role_name = #{type}			</if>			<if test="PID != null and PID != '' ">				and	r2.parent_id = #{PID}			</if>			<if test="name != null and name != '' ">				and	a.account_name LIKE CONCAT('%',#{name},'%')			</if>		</where>   </select>  <select id="selectUsersNotInUserGroup" parameterType="java.lang.String" resultMap="BaseResultMap">        SELECT <include refid="Base_Column_List" />        FROM account a        WHERE 1=1        <if test="accountName != null and accountName != '' ">            and a.account_name LIKE CONCAT('%',#{accountName},'%')        </if>        <if test="mobile != null and mobile != '' ">            and a.mobile LIKE CONCAT('%',#{mobile},'%')        </if>        and a.id not in (select DISTINCT(account_id) from account_group)   </select>		    <select id="selectCountNotInUserGroup" parameterType="java.lang.String" resultType="int">        SELECT count(*)        FROM account a        WHERE 1=1        <if test="accountName != null and accountName != '' ">            and a.account_name LIKE CONCAT('%',#{accountName},'%')        </if>        <if test="mobile != null and mobile != '' ">            and a.mobile LIKE CONCAT('%',#{mobile},'%')        </if>        and a.id not in (select DISTINCT(account_id) from account_group)   </select>        <select id="selectAllAccountAgent" resultType="com.fulan.api.security.vo.AccountAgentVo">   		select aa.agent_id agentId,aa.account_id accountId,a.post_type postType from account a join account_agent aa on a.id=aa.account_id   </select>	     </mapper>