<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zwo.xiyangyang.modules.guess.dao.GuessQuestionMapper">
	<resultMap id="BaseResultMap"
		type="com.zwo.xiyangyang.modules.guess.domain.GuessQuestion">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="CREATOR" property="creator" jdbcType="VARCHAR" />
		<result column="UPDATER" property="updater" jdbcType="VARCHAR" />
		<result column="ORG_ID" property="orgId" jdbcType="VARCHAR" />
		<result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
		<result column="UPDATE_DATE" property="updateDate" jdbcType="TIMESTAMP" />
		<result column="ENABLED" property="enabled" jdbcType="BIT" />
		<result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
		<result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
		<result column="SORT" property="sort" jdbcType="INTEGER" />
		<result column="IS_DEFAULT" property="isDefault" jdbcType="BIT" />
		<result column="EN_NAME" property="enName" jdbcType="VARCHAR" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
		<result column="ICON" property="icon" jdbcType="VARCHAR" />
		<result column="KEYWORDS" property="keywords" jdbcType="VARCHAR" />
		<result column="THUMBNAIL" property="thumbnail" jdbcType="VARCHAR" />
		<result column="CODE" property="code" jdbcType="VARCHAR" />
		<result column="USER_ID" property="userId" jdbcType="VARCHAR" />
		<result column="GUESS_CATEGORY_ID" property="guessCategoryId"
			jdbcType="VARCHAR" />
		<result column="GUESS_ANSWER_ID" property="guessAnswerId"
			jdbcType="VARCHAR" />
		<result column="QUESTION_END_TIME" property="questionEndTime"
			jdbcType="TIMESTAMP" />
		<result column="CHECKED" property="checked" jdbcType="INTEGER" />
		<result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
		<!-- 跟一对一一样用association标签,实体类定义的成员,要跟数据库字段名对应上 -->
		<!-- <association property="guessCategory" column="GUESS_CATEGORY_ID"
			select="com.zwo.xiyangyang.modules.guess.dao.GuessCategoryMapper.selectByPrimaryKey" /> -->
		<!-- <collection property="guessOptions" column="id"
			select="com.zwo.xiyangyang.modules.guess.dao.GuessOptionsMapper.selectByQuestionId">
		</collection> -->
		<collection property="guessOptions" ofType="com.zwo.xiyangyang.modules.guess.domain.GuessOptions">
			<id property="id" column="o_id"/>
            <result property="betRate" column="BET_RATE"/>
            <result property="guessQuestionId" column="GUESS_QUESTION_ID"/>
            <result property="isRight" column="IS_RIGHT"/>
            <result property="name" column="O_NAME"/>
            <result property="realQuestionId" column="REAL_QUESTION_ID"/>
		</collection>
		<!-- <collection property="roles" ofType="com.zwo.xiyangyang.modules.guess.domain.GuessOptions">
            <id property="id" column="rid"/>
            <result property="name" column="name"/>
            <result property="type" column="type"/> -->
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, CREATOR, UPDATER, ORG_ID, CREATE_DATE, UPDATE_DATE, ENABLED,
		START_TIME, END_TIME,
		SORT, IS_DEFAULT, EN_NAME, NAME, DESCRIPTION, ICON, KEYWORDS, THUMBNAIL,
		CODE, USER_ID,
		GUESS_CATEGORY_ID, GUESS_ANSWER_ID, QUESTION_END_TIME, CHECKED, PARENT_ID
	</sql>
	
	<!-- gq.*,go.id as o_id,go.BET_RATE,go.GUESS_QUESTION_ID,go.IS_RIGHT,go.NAME as o_name,go.REAL_QUESTION_ID -->
	<!-- LEFT JOIN
		    guess_options go ON gq.id = go.GUESS_QUESTION_ID -->
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestionCriteria">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from guess_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		<!-- select
		<include refid="Base_Column_List" />
		from guess_question
		where ID = #{id,jdbcType=VARCHAR} -->
		SELECT 
		    gq.*,go.id as o_id,go.BET_RATE,go.GUESS_QUESTION_ID,go.IS_RIGHT,go.NAME as o_name,go.REAL_QUESTION_ID
		FROM
		    guess_question gq
		        inner JOIN
		    guess_options go ON gq.id = go.GUESS_QUESTION_ID
		where gq.id=#{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from guess_question
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestionCriteria">
		delete from guess_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestion">
		insert into guess_question (ID, CREATOR, UPDATER, 
      ORG_ID, CREATE_DATE, UPDATE_DATE, 
      ENABLED, START_TIME, END_TIME, 
      SORT, IS_DEFAULT, EN_NAME, 
      NAME, DESCRIPTION, ICON, 
      KEYWORDS, THUMBNAIL, CODE, 
      USER_ID, GUESS_CATEGORY_ID, GUESS_ANSWER_ID, 
      QUESTION_END_TIME, CHECKED, PARENT_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{updater,jdbcType=VARCHAR}, 
      #{orgId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{enabled,jdbcType=BIT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{sort,jdbcType=INTEGER}, #{isDefault,jdbcType=BIT}, #{enName,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{keywords,jdbcType=VARCHAR}, #{thumbnail,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{guessCategoryId,jdbcType=VARCHAR}, #{guessAnswerId,jdbcType=VARCHAR}, 
      #{questionEndTime,jdbcType=TIMESTAMP}, #{checked,jdbcType=BIT}, #{parentId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestion" >
    insert into guess_question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="updater != null" >
        UPDATER,
      </if>
      <if test="orgId != null" >
        ORG_ID,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="updateDate != null" >
        UPDATE_DATE,
      </if>
      <if test="enabled != null" >
        ENABLED,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="sort != null" >
        SORT,
      </if>
      <if test="isDefault != null" >
        IS_DEFAULT,
      </if>
      <if test="enName != null" >
        EN_NAME,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="icon != null" >
        ICON,
      </if>
      <if test="keywords != null" >
        KEYWORDS,
      </if>
      <if test="thumbnail != null" >
        THUMBNAIL,
      </if>
      <if test="code != null" >
        CODE,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="guessCategoryId != null" >
        GUESS_CATEGORY_ID,
      </if>
      <if test="guessAnswerId != null" >
        GUESS_ANSWER_ID,
      </if>
      <if test="questionEndTime != null" >
        QUESTION_END_TIME,
      </if>
      <if test="checked != null" >
        CHECKED,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=BIT},
      </if>
      <if test="enName != null" >
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="thumbnail != null" >
        #{thumbnail,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="guessCategoryId != null" >
        #{guessCategoryId,jdbcType=VARCHAR},
      </if>
      <if test="guessAnswerId != null" >
        #{guessAnswerId,jdbcType=VARCHAR},
      </if>
      <if test="questionEndTime != null" >
        #{questionEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checked != null" >
        #{checked,jdbcType=BIT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
	<select id="countByExample"
		parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestionCriteria"
		resultType="java.lang.Integer">
		select count(*) from guess_question
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update guess_question
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.creator != null">
				CREATOR = #{record.creator,jdbcType=VARCHAR},
			</if>
			<if test="record.updater != null">
				UPDATER = #{record.updater,jdbcType=VARCHAR},
			</if>
			<if test="record.orgId != null">
				ORG_ID = #{record.orgId,jdbcType=VARCHAR},
			</if>
			<if test="record.createDate != null">
				CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateDate != null">
				UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.enabled != null">
				ENABLED = #{record.enabled,jdbcType=BIT},
			</if>
			<if test="record.startTime != null">
				START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.endTime != null">
				END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.sort != null">
				SORT = #{record.sort,jdbcType=INTEGER},
			</if>
			<if test="record.isDefault != null">
				IS_DEFAULT = #{record.isDefault,jdbcType=BIT},
			</if>
			<if test="record.enName != null">
				EN_NAME = #{record.enName,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				NAME = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.description != null">
				DESCRIPTION = #{record.description,jdbcType=VARCHAR},
			</if>
			<if test="record.icon != null">
				ICON = #{record.icon,jdbcType=VARCHAR},
			</if>
			<if test="record.keywords != null">
				KEYWORDS = #{record.keywords,jdbcType=VARCHAR},
			</if>
			<if test="record.thumbnail != null">
				THUMBNAIL = #{record.thumbnail,jdbcType=VARCHAR},
			</if>
			<if test="record.code != null">
				CODE = #{record.code,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				USER_ID = #{record.userId,jdbcType=VARCHAR},
			</if>
			<if test="record.guessCategoryId != null">
				GUESS_CATEGORY_ID = #{record.guessCategoryId,jdbcType=VARCHAR},
			</if>
			<if test="record.guessAnswerId != null">
				GUESS_ANSWER_ID = #{record.guessAnswerId,jdbcType=VARCHAR},
			</if>
			<if test="record.questionEndTime != null">
				QUESTION_END_TIME = #{record.questionEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.checked != null">
				CHECKED = #{record.checked,jdbcType=BIT},
			</if>
			<if test="record.parentId != null" >
		        PARENT_ID = #{record.parentId,jdbcType=VARCHAR},
		      </if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update guess_question
		set ID = #{record.id,jdbcType=VARCHAR},
		CREATOR = #{record.creator,jdbcType=VARCHAR},
		UPDATER = #{record.updater,jdbcType=VARCHAR},
		ORG_ID = #{record.orgId,jdbcType=VARCHAR},
		CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
		UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
		ENABLED = #{record.enabled,jdbcType=BIT},
		START_TIME = #{record.startTime,jdbcType=TIMESTAMP},
		END_TIME = #{record.endTime,jdbcType=TIMESTAMP},
		SORT = #{record.sort,jdbcType=INTEGER},
		IS_DEFAULT = #{record.isDefault,jdbcType=BIT},
		EN_NAME = #{record.enName,jdbcType=VARCHAR},
		NAME = #{record.name,jdbcType=VARCHAR},
		DESCRIPTION = #{record.description,jdbcType=VARCHAR},
		ICON = #{record.icon,jdbcType=VARCHAR},
		KEYWORDS = #{record.keywords,jdbcType=VARCHAR},
		THUMBNAIL = #{record.thumbnail,jdbcType=VARCHAR},
		CODE = #{record.code,jdbcType=VARCHAR},
		USER_ID = #{record.userId,jdbcType=VARCHAR},
		GUESS_CATEGORY_ID = #{record.guessCategoryId,jdbcType=VARCHAR},
		GUESS_ANSWER_ID = #{record.guessAnswerId,jdbcType=VARCHAR},
		QUESTION_END_TIME = #{record.questionEndTime,jdbcType=TIMESTAMP},
		CHECKED = #{record.checked,jdbcType=BIT},
      PARENT_ID = #{record.parentId,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestion">
		update guess_question
		<set>
			<if test="creator != null">
				CREATOR = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="updater != null">
				UPDATER = #{updater,jdbcType=VARCHAR},
			</if>
			<if test="orgId != null">
				ORG_ID = #{orgId,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateDate != null">
				UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="enabled != null">
				ENABLED = #{enabled,jdbcType=BIT},
			</if>
			<if test="startTime != null">
				START_TIME = #{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="endTime != null">
				END_TIME = #{endTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sort != null">
				SORT = #{sort,jdbcType=INTEGER},
			</if>
			<if test="isDefault != null">
				IS_DEFAULT = #{isDefault,jdbcType=BIT},
			</if>
			<if test="enName != null">
				EN_NAME = #{enName,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				DESCRIPTION = #{description,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				ICON = #{icon,jdbcType=VARCHAR},
			</if>
			<if test="keywords != null">
				KEYWORDS = #{keywords,jdbcType=VARCHAR},
			</if>
			<if test="thumbnail != null">
				THUMBNAIL = #{thumbnail,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				CODE = #{code,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="guessCategoryId != null">
				GUESS_CATEGORY_ID = #{guessCategoryId,jdbcType=VARCHAR},
			</if>
			<if test="guessAnswerId != null">
				GUESS_ANSWER_ID = #{guessAnswerId,jdbcType=VARCHAR},
			</if>
			<if test="questionEndTime != null">
				QUESTION_END_TIME = #{questionEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="checked != null">
				CHECKED = #{checked,jdbcType=BIT},
			</if>
			<if test="parentId != null" >
		        PARENT_ID = #{parentId,jdbcType=VARCHAR},
		      </if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestion">
		update guess_question
		set CREATOR = #{creator,jdbcType=VARCHAR},
		UPDATER = #{updater,jdbcType=VARCHAR},
		ORG_ID = #{orgId,jdbcType=VARCHAR},
		CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
		UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
		ENABLED = #{enabled,jdbcType=BIT},
		START_TIME = #{startTime,jdbcType=TIMESTAMP},
		END_TIME = #{endTime,jdbcType=TIMESTAMP},
		SORT = #{sort,jdbcType=INTEGER},
		IS_DEFAULT = #{isDefault,jdbcType=BIT},
		EN_NAME = #{enName,jdbcType=VARCHAR},
		NAME = #{name,jdbcType=VARCHAR},
		DESCRIPTION = #{description,jdbcType=VARCHAR},
		ICON = #{icon,jdbcType=VARCHAR},
		KEYWORDS = #{keywords,jdbcType=VARCHAR},
		THUMBNAIL = #{thumbnail,jdbcType=VARCHAR},
		CODE = #{code,jdbcType=VARCHAR},
		USER_ID = #{userId,jdbcType=VARCHAR},
		GUESS_CATEGORY_ID = #{guessCategoryId,jdbcType=VARCHAR},
		GUESS_ANSWER_ID = #{guessAnswerId,jdbcType=VARCHAR},
		QUESTION_END_TIME = #{questionEndTime,jdbcType=TIMESTAMP},
		CHECKED = #{checked,jdbcType=BIT},
      	PARENT_ID = #{parentId,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	
	<update id="updateMememberAcc" parameterType="map">
		update  guess_account ma 
		INNER JOIN
		(SELECT ma.MEMBER_ID,SUM((gmo.BET_VALUE * go.BET_RATE)) AS balance,SUM(go.bet_rate * gmo.BET_VALUE) AS deposit
		    FROM
		        guess_options go
		    LEFT JOIN guess_mem_options gmo ON go.ID = gmo.OPTION_ID
		    LEFT JOIN guess_question gq ON go.GUESS_QUESTION_ID = gq.id
		        AND gmo.QUESTION_ID = gq.id
		    LEFT JOIN guess_account ma ON gmo.MEM_ID = ma.id
		    WHERE
		        gq.id = #{questionId} AND gq.CHECKED = 0
		            AND go.IS_RIGHT = 1
		    GROUP BY gmo.MEM_ID) AS temp on ma.MEMBER_ID=temp.MEMBER_ID
		set ma.BALANCE=ma.BALANCE+temp.balance,ma.DEPOSIT=temp.deposit
	</update>
	
	<update id="updateMememberHisAcc" parameterType="map">
		insert into guess_account_his (description,member_id,balance,deposit,devote,type,content,rate) 
		(SELECT 
		   gq.NAME as description,ma.MEMBER_ID,ma.BALANCE as balance, go.bet_rate*gmo.BET_VALUE as deposit,gmo.BET_VALUE as devote,concat('赢',(go.bet_rate*gmo.BET_VALUE)) as type,go.NAME,go.BET_RATE
		FROM
			guess_options go
		        left JOIN
		     guess_mem_options gmo
		     ON go.ID = gmo.OPTION_ID
		        LEFT JOIN
		    guess_question gq ON go.GUESS_QUESTION_ID = gq.id
		        AND gmo.QUESTION_ID = gq.id
				left join
			guess_account ma on gmo.MEM_ID=ma.id
			
		WHERE
		    gq.id = #{questionId} AND gq.CHECKED = 0
		        AND go.IS_RIGHT = 1)
	</update>
	
	<select id="selectByName" resultMap="BaseResultMap" parameterType="map">
		SELECT 
		    gq.*,go.id as o_id,go.BET_RATE,go.GUESS_QUESTION_ID,go.IS_RIGHT,go.NAME as o_name,go.REAL_QUESTION_ID
		FROM
		    guess_question gq
		        inner JOIN
		    guess_options go ON gq.id = go.GUESS_QUESTION_ID
		where gq.name=#{name} and gq.code=#{code}
	</select>
	
	<select id="selectQuestions" 
	parameterType="com.zwo.xiyangyang.modules.guess.domain.GuessQuestion"
	resultMap="BaseResultMap">
		SELECT 
		    gq.*,go.id as o_id,go.BET_RATE,go.GUESS_QUESTION_ID,go.IS_RIGHT,go.NAME as o_name,go.REAL_QUESTION_ID
		FROM
		    guess_question gq
		        inner JOIN
		    guess_options go ON gq.id = go.GUESS_QUESTION_ID
		where 1=1
		 	<if test="checked != null">
				and gq.checked = #{checked}
			</if>
		 	and gq.question_End_Time > sysdate()
			order by create_date desc
	</select>
</mapper>